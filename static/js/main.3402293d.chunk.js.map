{"version":3,"sources":["helpers.ts","components/Carousel.tsx","App.tsx","index.tsx"],"names":["getNextFrame","current","count","frameSize","step","infinite","next","getPreviousFrame","previous","Carousel","state","currentFrame","inTransition","hasNext","hasPrevious","intervalId","handleNext","props","images","length","hasPreviouus","nextFrame","setState","setCurrentFrame","handlePrevious","previousFrame","setTimeout","animationDuration","inVisibleArea","index","this","itemWidth","className","style","width","transform","transitionDuration","map","imageUrl","classNames","src","alt","type","onClick","disabled","Component","defaultState","App","handleStepChange","changeEvent","value","Number","target","handleItemWidthChange","handleFrameSizeChange","handleAnimationDurationChange","handleInfiniteChange","checked","htmlFor","id","min","name","onChange","max","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3402293d.chunk.js","sourcesContent":["export function getNextFrame(\n  current: number,\n  count: number,\n  frameSize: number,\n  step: number,\n  infinite: boolean,\n) {\n  let next = current + step;\n\n  if (current + frameSize === count && infinite) {\n    next = 0;\n  }\n\n  if (count - next < frameSize) {\n    next = count - frameSize;\n  }\n\n  return next;\n}\n\nexport function getPreviousFrame(\n  current: number,\n  count: number,\n  frameSize: number,\n  step: number,\n  infinite: boolean,\n) {\n  let previous = current - step;\n\n  if (current === 0 && infinite) {\n    previous = count - frameSize;\n  }\n\n  if (previous < 0) {\n    previous = 0;\n  }\n\n  return previous;\n}\n","import { Component } from 'react';\nimport classNames from 'classnames';\nimport './Carousel.scss';\nimport { getNextFrame, getPreviousFrame } from '../helpers';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  currentFrame: number,\n  inTransition: boolean,\n  hasNext: boolean,\n  hasPrevious: boolean,\n};\n\nclass Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentFrame: 0,\n    inTransition: false,\n    hasNext: true,\n    hasPrevious: false,\n  };\n\n  intervalId = 0;\n\n  handleNext = () => {\n    const {\n      step,\n      frameSize,\n      infinite,\n      images,\n    } = this.props;\n    const count = images.length;\n    const { currentFrame, hasPrevious: hasPreviouus } = this.state;\n\n    const nextFrame = getNextFrame(\n      currentFrame,\n      count,\n      frameSize,\n      step,\n      infinite,\n    );\n\n    const hasNextFrame = getNextFrame(\n      nextFrame,\n      count,\n      frameSize,\n      step,\n      infinite,\n    ) !== nextFrame;\n\n    if (!hasNextFrame) {\n      this.setState({\n        hasNext: false,\n      });\n    }\n\n    if (!hasPreviouus) {\n      this.setState({\n        hasPrevious: true,\n      });\n    }\n\n    this.setCurrentFrame(nextFrame);\n  };\n\n  handlePrevious = () => {\n    const {\n      step,\n      infinite,\n      frameSize,\n      images,\n    } = this.props;\n    const count = images.length;\n    const { currentFrame, hasNext } = this.state;\n\n    const previousFrame = getPreviousFrame(\n      currentFrame,\n      count,\n      frameSize,\n      step,\n      infinite,\n    );\n\n    const hasPreviousFrame = getPreviousFrame(\n      previousFrame,\n      count,\n      frameSize,\n      step,\n      infinite,\n    ) !== previousFrame;\n\n    if (!hasPreviousFrame) {\n      this.setState({\n        hasPrevious: false,\n      });\n    }\n\n    if (!hasNext) {\n      this.setState({\n        hasNext: true,\n      });\n    }\n\n    this.setCurrentFrame(previousFrame);\n  };\n\n  setCurrentFrame = (nextFrame: number) => {\n    this.setState({\n      inTransition: true,\n      currentFrame: nextFrame,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        inTransition: false,\n      });\n    }, this.props.animationDuration);\n  };\n\n  inVisibleArea = (index: number) => {\n    const { currentFrame } = this.state;\n    const { frameSize } = this.props;\n\n    return index >= currentFrame\n      && index < currentFrame + frameSize;\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n    const {\n      currentFrame,\n      inTransition,\n      hasNext,\n      hasPrevious: hasPreviouus,\n    } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: frameSize * itemWidth,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-itemWidth * currentFrame}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((imageUrl, index) => (\n            <li className=\"Carousel__item\">\n              <img\n                className={\n                  classNames('Carousel__img',\n                    {\n                      'Carousel__img--visible': this.inVisibleArea(index),\n                    })\n                }\n                src={imageUrl}\n                alt={`${index + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            onClick={this.handlePrevious}\n            className=\"Carousel__button\"\n            disabled={inTransition || !hasPreviouus}\n          >\n            {'<<'}\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleNext}\n            data-cy=\"next\"\n            className=\"Carousel__button\"\n            disabled={inTransition || !hasNext}\n          >\n            {'>>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number\n  infinite: boolean,\n}\n\nconst defaultState: State = {\n  images: [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ],\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = defaultState;\n\n  handleStepChange = (\n    changeEvent: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const value = Number(changeEvent.target.value);\n\n    this.setState({ step: value });\n  };\n\n  handleItemWidthChange = (\n    changeEvent: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const value = Number(changeEvent.target.value);\n\n    this.setState({ itemWidth: value });\n  };\n\n  handleFrameSizeChange = (\n    changeEvent: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const value = Number(changeEvent.target.value);\n\n    this.setState({ frameSize: value });\n  };\n\n  handleAnimationDurationChange = (\n    changeEvent: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const value = Number(changeEvent.target.value);\n\n    this.setState({ animationDuration: value });\n  };\n\n  handleInfiniteChange = (\n    changeEvent: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ infinite: changeEvent.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"App__form\">\n          <label htmlFor=\"itemId\" className=\"App__label\">\n            {'Item width: '}\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              min={0}\n              name=\"itemWidth\"\n              value={itemWidth}\n              onChange={this.handleItemWidthChange}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\" className=\"App__label\">\n            {'Frame size: '}\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              min={1}\n              max={images.length}\n              name=\"frameSize\"\n              value={frameSize}\n              onChange={this.handleFrameSizeChange}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\" className=\"App__label\">\n            {'Step: '}\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              min={1}\n              max={images.length - 1}\n              name=\"step\"\n              value={step}\n              onChange={this.handleStepChange}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            {'Animation duration: '}\n            <input\n              type=\"number\"\n              min={0}\n              name=\"animationDuration\"\n              value={animationDuration}\n              onChange={this.handleAnimationDurationChange}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            {'Infinite: '}\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              checked={infinite}\n              onChange={this.handleInfiniteChange}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}